// Code generated by "stringer -type=ErrCode -linecomment"; DO NOT EDIT.

package message

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ServerMaintenance - -1]
	_ = x[NormalMessageID-0]
	_ = x[Canceled-1]
	_ = x[UnknownError-2]
	_ = x[InvalidArgument-3]
	_ = x[AppidOverdue-4]
	_ = x[AccountDisabled-101]
	_ = x[TokenFailure-102]
	_ = x[HTMLSuccess-200]
	_ = x[BlockingAcess-405]
	_ = x[NewReport-201]
	_ = x[NewHeart-202]
	_ = x[ParameterInvalid-1001]
	_ = x[AppidParameterInvalid-1002]
	_ = x[EncryptCheckError-1003]
	_ = x[UserNameDoNotExist-1004]
	_ = x[DuplicateKeyError-1005]
	_ = x[InValidOp-1007]
	_ = x[NotFindError-1006]
	_ = x[InValidAuthorize-1008]
	_ = x[HasusedError-1009]
	_ = x[HasActvError-1010]
	_ = x[ActvFailure-1011]
	_ = x[UserExisted-1012]
	_ = x[VerifyTimeError-1013]
	_ = x[MailSendFaild-1014]
	_ = x[SMSSendFaild-1015]
	_ = x[PhoneParameterError-1016]
	_ = x[VerifyError-1017]
	_ = x[UserNotExisted-1018]
	_ = x[TopicExisted-1019]
	_ = x[TopicNotExisted-1020]
	_ = x[BundleIDNotExisted-1021]
	_ = x[TopicStartFail-1022]
	_ = x[TopicTypeNotExisted-1023]
	_ = x[TopicIsNotNull-1024]
	_ = x[DeviceNotExisted-1025]
	_ = x[StateExisted-1027]
	_ = x[LastMenuNotExisted-1028]
	_ = x[MenuNotExisted-1029]
	_ = x[UserMenuNotExisted-1030]
	_ = x[DeviceIDNotExisted-1031]
	_ = x[GoodsDealTypeNotExisted-1032]
	_ = x[GoodsIDNotExisted-1033]
	_ = x[GoodsBeInDiscount-1034]
	_ = x[GoodsPayTypeNotExisted-1035]
	_ = x[GoodsIDExisted-1036]
	_ = x[OrderIDNotExisted-1043]
	_ = x[GoodsBeNotInDiscount-1044]
	_ = x[NotifyIsNotMatch-1045]
	_ = x[GoodsIsDiscountRecovery-1046]
	_ = x[InvitationUserNotExisted-1047]
	_ = x[InvitationUserLevelIsFull-1048]
	_ = x[UserNotAuthorize-1049]
	_ = x[ApplicantIsExisted-1050]
	_ = x[ApplicantNotExisted-1051]
	_ = x[CreditOrderNotVaild-1052]
	_ = x[RepeatWxWithdraw-1053]
	_ = x[WxWithdrawAmountError-1054]
	_ = x[WxWithdrawError-1055]
	_ = x[RepeatSubmission-1056]
	_ = x[BundleExisted-1057]
	_ = x[AuthExisted-1058]
	_ = x[AuthNotExisted-1059]
	_ = x[RoomTypeNotExisted-1060]
	_ = x[RoomTypeExisted-1061]
	_ = x[RoomNoNotExisted-1062]
	_ = x[RoomNoExisted-1063]
	_ = x[RateTypeExisted-1064]
	_ = x[RateTypeNotExisted-1065]
	_ = x[FileNotExisted-1066]
	_ = x[RoomNoInvaild-1067]
	_ = x[ClassExisted-1068]
	_ = x[ClassNotExisted-1069]
	_ = x[CheckTimeError-1070]
	_ = x[CurrentClassIsShift-1071]
	_ = x[PayPriceError-1072]
	_ = x[StockNotEnough-1073]
	_ = x[DBSaveError-1074]
	_ = x[DBAddError-1075]
	_ = x[DBUpdateError-1076]
	_ = x[DBDeleteError-1077]
	_ = x[TimeError-1078]
	_ = x[OrderInfoError-1079]
	_ = x[NotVaildError-1080]
	_ = x[Overdue-1081]
	_ = x[MaxOverError-1082]
	_ = x[MinOverError-1083]
	_ = x[ExistedError-1084]
	_ = x[NotBindError-1085]
	_ = x[BindError-1086]
	_ = x[CalError-1087]
	_ = x[TokenCheckError-1088]
	_ = x[AppidNotFind-1089]
	_ = x[HaveDeal-1090]
	_ = x[ParseFilesError-1091]
	_ = x[CacheException-1092]
	_ = x[TemplateExecuteError-1093]
	_ = x[OpTimeError-1094]
	_ = x[EmptyError-1095]
	_ = x[Unfollow-1096]
	_ = x[HaveLink-1097]
	_ = x[StateError-1098]
	_ = x[LimitError-1099]
	_ = x[UserNameFormatError-2001]
	_ = x[AvatarUsedError-2002]
	_ = x[TokenUsedError-2003]
	_ = x[NotFoundResourceError-2004]
	_ = x[ProjectCodeExistedError-2005]
	_ = x[ExcelExportError-2006]
	_ = x[NotFoundPublishVersionError-2007]
	_ = x[SaveFileError-2008]
	_ = x[UnreleasedVersionError-2009]
	_ = x[CheckResourceFailed-2010]
	_ = x[InvalidPublicationError-2011]
	_ = x[FailedPublication-2012]
	_ = x[LangSettingWarning-2013]
	_ = x[TrainError-2014]
	_ = x[BusinessUsedError-2015]
	_ = x[CommandUsedError-2016]
	_ = x[FAQOverdueError-2017]
	_ = x[FAQTrainError-2018]
	_ = x[FAQSearchError-2019]
	_ = x[FAQClusterError-2020]
	_ = x[FAQIndicesError-2021]
	_ = x[FAQDeleteIndexError-2022]
	_ = x[NLUProcessError-2023]
	_ = x[NLUParseError-2024]
	_ = x[NLUGenerateError-2025]
	_ = x[NLUTrainError-2026]
	_ = x[NLUPublishError-2027]
	_ = x[FAQModelUsedError-2028]
	_ = x[BusinessNotFoundError-2029]
	_ = x[AppNotFoundError-2030]
	_ = x[AppUsedError-2031]
	_ = x[CharacterNotFoundError-2032]
	_ = x[AvatarNotFoundError-2033]
	_ = x[DomainUsedError-2034]
	_ = x[DomainNotFoundError-2035]
	_ = x[CheckResourceIntactWarning-2036]
	_ = x[CheckSkeletonWarning-2037]
	_ = x[CheckAnimWarning-2038]
	_ = x[NotMatching-2039]
	_ = x[DeviceUnauthorized-2040]
	_ = x[AICountIsZero-2041]
	_ = x[NoFAQQuestion-2042]
	_ = x[WordLimitError-2043]
	_ = x[InValidDelByTemp-2044]
	_ = x[InValidDelByVersion-2045]
	_ = x[InValidDelByScene-2046]
	_ = x[ExcelExportLimit-2047]
	_ = x[ExcelImportError-2048]
	_ = x[DocQaPairGenError-2049]
	_ = x[DocQaPairNotGenError-2050]
}

const (
	_ErrCode_name_0 = "服务器维护中 请稍后再试normal已取消未知错误无效参数appid过期"
	_ErrCode_name_1 = "帐号被禁用token失效"
	_ErrCode_name_2 = "成功新消息心跳"
	_ErrCode_name_3 = "禁止访问"
	_ErrCode_name_4 = "参数无效appid参数无效密文校验失败,aa用户名不存在或密码错误键值对重复未找到无效操作授权码错误已被使用已被激活激活码被禁止使用用户已存在验证码请求过于频繁邮箱发送失败手机发送失败手机号格式有问题验证码错误用户不存在topic已经存在topic不存在bundle_id不存在topic开启处理失败topic处理类型不存在topic不能为空设备不存在"
	_ErrCode_name_5 = "状态已存在上级菜单不存在菜单不存在用户权限不存在设备ID不存在商品处理类型不存在商品不存在商品正在打折商品可支付类型不存在商品已存在"
	_ErrCode_name_6 = "订单不存在商品未打折会话不匹配商品已恢复原价邀请用户不存在邀请用户级数已满用户未授权申请人已存在申请人不存在订单无效微信零钱重复提现提现金额错误微信提现失败重复提交bundle已存在权限已存在权限不存在房型不存在房型已存在房间不存在房间已存在房价代码或房价名称已存在房价代码不存在文件不存在房间未启用班次已存在班次不存在系统时间与营业时间不匹配当前班次已交班支付金额错误存量不足数据存储错误数据添加错误数据更新错误数据删除错误时间错误预定信息错误不允许已过期超过最大值低于最小值已存在未绑定绑定失败计算错误token校验失败应用id未找到已经处理解析文件错误缓存异常模板执行错误请不要平凡操作数据为空用户已取消关注存在关联状态错误超限"
	_ErrCode_name_7 = "用户名格式错误无效操作,存在使用中的虚拟人被另外一个浏览器打开，请稍后再试资源未找到产品代码重复Excel导出失败未找到发布版本文件保存失败已存在未发布的版本校验资源失败本次发布无效本次发布失败请至少完成一个语种的配置训练失败无效操作,存在使用中的知识库无效操作,存在使用中的指令训练数据已过期，请重新训练知识库训练错误，请稍后再试问答服务错误，请稍后再试知识库聚类错误，请稍后再试获取索引异常索引删除异常NLU测试异常, 请稍后再试NLU置信度获取异常, 请稍后再试NLU训练数据生成错误，请稍后再试NLU训练失败，请稍后再试NLU发布失败，请稍后再试无效操作,存在使用中的模型未找到可用知识库未找到应用信息存在正在使用的应用信息未找到可用的虚拟人模板未找到可用的虚拟人无效操作,空间存在正在使用的数据未找到可用的租户空间请上传完整的角色模型请上传角色骨骼请上传角色动画未匹配到设备未授权无AI扩写数据请先录入FAQ字数超限该母版正在被使用，无法删除。该版本正在被使用，无法删除。该场景正在被使用，无法删除。一次最多导出10万条交互记录，请缩小筛选范围Excel导入失败正在生成辅助问答对，请等待完成后再进行训练请先生成辅助问答对"
)

var (
	_ErrCode_index_0 = [...]uint8{0, 34, 40, 49, 61, 73, 84}
	_ErrCode_index_1 = [...]uint8{0, 15, 26}
	_ErrCode_index_2 = [...]uint8{0, 6, 15, 21}
	_ErrCode_index_4 = [...]uint16{0, 12, 29, 50, 83, 98, 107, 119, 134, 146, 158, 182, 197, 224, 242, 260, 284, 299, 314, 331, 345, 363, 386, 412, 429, 444}
	_ErrCode_index_5 = [...]uint8{0, 15, 36, 51, 72, 89, 116, 131, 149, 179, 194}
	_ErrCode_index_6 = [...]uint16{0, 15, 30, 45, 66, 87, 111, 126, 144, 162, 174, 198, 216, 234, 246, 261, 276, 291, 306, 321, 336, 351, 387, 408, 423, 438, 453, 468, 504, 525, 543, 555, 573, 591, 609, 627, 639, 657, 666, 675, 690, 705, 714, 723, 735, 747, 764, 781, 793, 811, 823, 841, 862, 874, 895, 907, 919, 925}
	_ErrCode_index_7 = [...]uint16{0, 21, 61, 109, 124, 142, 159, 180, 198, 225, 243, 261, 279, 315, 327, 367, 404, 443, 482, 518, 557, 575, 593, 625, 666, 711, 744, 777, 814, 838, 859, 892, 925, 952, 998, 1028, 1058, 1079, 1100, 1112, 1127, 1144, 1159, 1171, 1213, 1255, 1297, 1359, 1376, 1439, 1466}
)

func (i ErrCode) String() string {
	switch {
	case -1 <= i && i <= 4:
		i -= -1
		return _ErrCode_name_0[_ErrCode_index_0[i]:_ErrCode_index_0[i+1]]
	case 101 <= i && i <= 102:
		i -= 101
		return _ErrCode_name_1[_ErrCode_index_1[i]:_ErrCode_index_1[i+1]]
	case 200 <= i && i <= 202:
		i -= 200
		return _ErrCode_name_2[_ErrCode_index_2[i]:_ErrCode_index_2[i+1]]
	case i == 405:
		return _ErrCode_name_3
	case 1001 <= i && i <= 1025:
		i -= 1001
		return _ErrCode_name_4[_ErrCode_index_4[i]:_ErrCode_index_4[i+1]]
	case 1027 <= i && i <= 1036:
		i -= 1027
		return _ErrCode_name_5[_ErrCode_index_5[i]:_ErrCode_index_5[i+1]]
	case 1043 <= i && i <= 1099:
		i -= 1043
		return _ErrCode_name_6[_ErrCode_index_6[i]:_ErrCode_index_6[i+1]]
	case 2001 <= i && i <= 2050:
		i -= 2001
		return _ErrCode_name_7[_ErrCode_index_7[i]:_ErrCode_index_7[i+1]]
	default:
		return "ErrCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
